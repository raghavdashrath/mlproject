# Sample table-like structure using list of dictionaries
morph_table = [
    {"Base Word": "play", "Prefix": "re", "Suffix": "ing"},
    {"Base Word": "happy", "Prefix": "un", "Suffix": ""},
    {"Base Word": "teach", "Prefix": "", "Suffix": "er"}
]

# Add Operation: Combine prefix + base + suffix
for row in morph_table:
    base = row["Base Word"]
    prefix = row["Prefix"]
    suffix = row["Suffix"]
    new_word = prefix + base + suffix
    row["New Word"] = new_word

# Show table with added words
print("Table After Add Operation:\n")
for row in morph_table:
    print(row)

# Delete prefix/suffix
print("\nTable After Delete Operation:\n")
for row in morph_table:
    new_word = row["New Word"]
    prefix = row["Prefix"]
    suffix = row["Suffix"]

    word_after_prefix_removal = new_word[len(prefix):] if prefix and new_word.startswith(prefix) else new_word
    word_after_suffix_removal = word_after_prefix_removal[:-len(suffix)] if suffix and new_word.endswith(suffix) else word_after_prefix_removal
    
    print(f"Original: {new_word} âž¡ Base: {word_after_suffix_removal}")